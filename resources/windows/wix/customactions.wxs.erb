<?xml version="1.0" encoding="windows-1252"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">

  <Fragment>
    <ComponentGroup Id="FragmentCustomActions" />

    <!-- Properties for existing Ini Values - expanding the remembered properties pattern just a bit
    -->

    <CustomAction
      Id="SetIniPropertyValues"
      Script="vbscript"
      Execute="firstSequence"
      Return="ignore">
      <![CDATA[
On Error Resume Next
Function SetPropertyFromIni (keyName, propertyName, textToSearch)
  Set iniValueRegex = New RegExp
  iniValueRegex.IgnoreCase = true
  iniValueRegex.Multiline = true
  iniValueRegex.Global = false
  iniValueRegex.Pattern = "^" & keyName & "=(.*[^\s\r\n]*)$"
  Set matches = iniValueRegex.Execute(textToSearch)
  dim iniValue
  iniValue = ""
  If (matches.Count <> 0) Then
    If (matches.Item(0).SubMatches.Count <> 0) Then
      iniValue = matches.Item(0).SubMatches(0)
      iniValue = Replace(Replace(Replace(iniValue, Chr(13), ""), vbNewLine, ""), vbLf, "")
    End If
  End If
  If (iniValue <> "") Then
    Session.Property(propertyName) = iniValue
  End If
End Function
Dim fso, wshShell, iniPath
Set wshShell = CreateObject("WScript.Shell")
iniPath = wshShell.ExpandEnvironmentStrings("%ALLUSERSPROFILE%\PuppetLabs\puppet\etc\puppet.conf")
Set fso = CreateObject("Scripting.FileSystemObject")
If (fso.FileExists(iniPath)) Then
  Set iniFile = fso.OpenTextFile(iniPath, 1, false)
  iniFileText = iniFile.ReadAll()
  iniFile.Close
  Set iniFile = Nothing
  SetPropertyFromIni "server", "INI_PUPPET_MASTER_SERVER", iniFileText
  SetPropertyFromIni "environment", "INI_PUPPET_AGENT_ENVIRONMENT", iniFileText
  SetPropertyFromIni "certname", "INI_PUPPET_AGENT_CERTNAME", iniFileText
  SetPropertyFromIni "ca_server", "INI_PUPPET_CA_SERVER", iniFileText
End If
      ]]>
    </CustomAction>

    <!-- Custom action to get the localised name for the "Everyone" (or World) user as
         WixUtil:OSInfo Custom action doesn't return this value.
         Equivalent of     (Get-WmiObject Win32_Account | where { $_.SID -eq "S-1-1-0" }).name
      -->
    <CustomAction
      Id="GetLocalisedAccountNames"
      Script="vbscript"
      Execute="immediate"
      Return="check">
        <![CDATA[
      On Error Resume Next
      Dim ojbLocator:  set objLocator = CreateObject("WbemScripting.SWbemLocator")
      Dim objWMI:      set objWMI = objLocator.ConnectServer(".", "root/cimv2")
      Dim sidEveryone: sidEveryone = "S-1-1-0"
      Dim sidAdmins:   sidAdmins   = "S-1-5-32-544"
      Dim objSIDEveryone: set objSIDEveryone = objWMI.Get("Win32_SID='" & sidEveryone & "'")
      Dim objSIDAdmins:   set objSIDAdmins = objWMI.Get("Win32_SID='" & sidAdmins & "'")
      Session.Property("PUP_LCL_ACCOUNT_EVERYONE") = objSIDEveryone.AccountName
      Session.Property("PUP_LCL_ACCOUNT_ADMINISTRATORS") = objSIDAdmins.AccountName
        ]]>
    </CustomAction>


    <!-- Custom Actions to handle command line property values that override
         remembered property values -->
    <!-- INSTALLDIR -->
    <CustomAction
      Id="SaveCmdLineInstallDir"
      Property="CMDLINE_INSTALLDIR"
      Value="[INSTALLDIR]"
      Execute="firstSequence" />
    <CustomAction
      Id="SetFromCmdLineInstallDir"
      Property="INSTALLDIR"
      Value="[CMDLINE_INSTALLDIR]"
      Execute="firstSequence" />

    <!-- PUPPET_MASTER_SERVER -->
    <CustomAction
      Id="SetFromIniPuppetMasterServer"
      Property="PUPPET_MASTER_SERVER"
      Value="[INI_PUPPET_MASTER_SERVER]"
      Execute="firstSequence" />
    <CustomAction
      Id="SaveCmdLinePuppetMasterServer"
      Property="CMDLINE_PUPPET_MASTER_SERVER"
      Value="[PUPPET_MASTER_SERVER]"
      Execute="firstSequence" />
    <CustomAction
      Id="SetFromCmdLinePuppetMasterServer"
      Property="PUPPET_MASTER_SERVER"
      Value="[CMDLINE_PUPPET_MASTER_SERVER]"
      Execute="firstSequence" />
    <CustomAction
      Id="SetDefaultPuppetMasterServer"
      Property="PUPPET_MASTER_SERVER"
      Value="puppet"
      Execute="firstSequence" />

    <!-- PUPPET_AGENT_ENVIRONMENT -->
    <CustomAction
      Id="SetFromIniPuppetAgentEnvironment"
      Property="PUPPET_AGENT_ENVIRONMENT"
      Value="[INI_PUPPET_AGENT_ENVIRONMENT]"
      Execute="firstSequence" />
    <CustomAction
      Id="SaveCmdLinePuppetAgentEnvironment"
      Property="CMDLINE_PUPPET_AGENT_ENVIRONMENT"
      Value="[PUPPET_AGENT_ENVIRONMENT]"
      Execute="firstSequence" />
    <CustomAction
      Id="SetFromCmdLinePuppetAgentEnvironment"
      Property="PUPPET_AGENT_ENVIRONMENT"
      Value="[CMDLINE_PUPPET_AGENT_ENVIRONMENT]"
      Execute="firstSequence" />

    <!-- PUPPET_AGENT_CERTNAME -->
    <CustomAction
      Id="SetFromIniPuppetAgentCertname"
      Property="PUPPET_AGENT_CERTNAME"
      Value="[INI_PUPPET_AGENT_CERTNAME]"
      Execute="firstSequence" />
    <CustomAction
      Id="SaveCmdLinePuppetAgentCertname"
      Property="CMDLINE_PUPPET_AGENT_CERTNAME"
      Value="[PUPPET_AGENT_CERTNAME]"
      Execute="firstSequence" />
    <CustomAction
      Id="SetFromCmdLinePuppetAgentCertname"
      Property="PUPPET_AGENT_CERTNAME"
      Value="[CMDLINE_PUPPET_AGENT_CERTNAME]"
      Execute="firstSequence" />

    <!-- PUPPET_CA_SERVER -->
    <CustomAction
      Id="SetFromIniPuppetCaServer"
      Property="PUPPET_CA_SERVER"
      Value="[INI_PUPPET_CA_SERVER]"
      Execute="firstSequence" />
    <CustomAction
      Id="SaveCmdLinePuppetCaServer"
      Property="CMDLINE_PUPPET_CA_SERVER"
      Value="[PUPPET_CA_SERVER]"
      Execute="firstSequence" />
    <CustomAction
      Id="SetFromCmdLinePuppetCaServer"
      Property="PUPPET_CA_SERVER"
      Value="[CMDLINE_PUPPET_CA_SERVER]"
      Execute="firstSequence" />

    <!-- PUPPET_AGENT_STARTUP_MODE -->
    <CustomAction
      Id="SaveCmdLinePuppetAgentStartupMode"
      Property="CMDLINE_PUPPET_AGENT_STARTUP_MODE"
      Value="[PUPPET_AGENT_STARTUP_MODE]"
      Execute="firstSequence" />
    <CustomAction
      Id="SetFromCmdLinePuppetAgentStartupMode"
      Property="PUPPET_AGENT_STARTUP_MODE"
      Value="[CMDLINE_PUPPET_AGENT_STARTUP_MODE]"
      Execute="firstSequence" />

    <!-- PUPPET_AGENT_ACCOUNT_DOMAIN -->
    <CustomAction
      Id="SetDomainToLocalComputer"
      Property="PUPPET_AGENT_ACCOUNT_DOMAIN"
      Value="[ComputerName]"
      Execute="firstSequence"/>
    <CustomAction
      Id="SetDomainToNtAuthority"
      Property="PUPPET_AGENT_ACCOUNT_DOMAIN"
      Value="NT AUTHORITY"
      Execute="firstSequence"/>

    <%- if @platform.architecture == "x86" -%>
    <!-- If these fail, we don't want to fail the installer -->
    <!-- We can't do a registry search for powershell's installed location because it will turn up the WOW64Node version due to not being able to bypass redirection in RegistrySearch
         So we will assume the default install location and if it fails, we will ignore the error.
         this is the only way to grab path without expanding variables
         [Microsoft.Win32.Registry]::LocalMachine.OpenSubKey("SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\\").GetValue("PATH", "", [Microsoft.Win32.RegistryValueOptions]::DoNotExpandEnvironmentNames).ToString();
         [System.Text.RegularExpressions.Regex]::Replace([Microsoft.Win32.Registry]::LocalMachine.OpenSubKey("SYSTEM\CurrentControlSet\Control\Session Manager\Environment\").GetValue("PATH", "", [Microsoft.Win32.RegistryValueOptions]::DoNotExpandEnvironmentNames).ToString(), "c:\\Program files\\Puppet Labs\\Puppet\\bin(?>;)?", "", [System.Text.RegularExpressions.RegexOptions]::IgnoreCase)
         "c:\windows\System32\WindowsPowerShell\v1.0\powershell.exe" -NoLogo -NonInteractive -InputFormat None -NoProfile -ExecutionPolicy Bypass -Command "[System.Text.RegularExpressions.Regex]::Replace([Microsoft.Win32.Registry]::LocalMachine.OpenSubKey('SYSTEM\CurrentControlSet\Control\Session Manager\Environment\').GetValue('PATH', '', [Microsoft.Win32.RegistryValueOptions]::DoNotExpandEnvironmentNames).ToString(),  [System.Text.RegularExpressions.Regex]::Escape('c:\Program Files\Puppet Labs\Puppet\bin') + '(?>;)?', '', [System.Text.RegularExpressions.RegexOptions]::IgnoreCase) | %{[System.Environment]::SetEnvironmentVariable('PATH',$_,'Machine')}"
         &quot;[%WINDIR]\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoLogo -NonInteractive -InputFormat None -NoProfile -ExecutionPolicy Bypass -Command &quot;[\[]System.Text.RegularExpressions.Regex[\]]::Replace([\[]Microsoft.Win32.Registry[\]]::LocalMachine.OpenSubKey(&apos;SYSTEM\CurrentControlSet\Control\Session Manager\Environment\&apos;).GetValue(&apos;PATH&apos;, &apos;&apos;, [\[]Microsoft.Win32.RegistryValueOptions[\]]::DoNotExpandEnvironmentNames).ToString(),  [\[]System.Text.RegularExpressions.Regex[\]]::Escape(&apos;[ProgramFiles64Folder]$(var.OurCompanyName)\Puppet\bin&apos;) + &apos;([\?]&gt;;)[\?]&apos;, &apos;&apos;, [\[]System.Text.RegularExpressions.RegexOptions[\]]::IgnoreCase) | %[\{][\[]System.Environment[\]]::SetEnvironmentVariable(&apos;PATH&apos;,$_, &apos;Machine&apos;)[\}]&quot;
    -->
    <CustomAction
      Id="Remove64BitPath_SetProp"
      Property="Remove64BitPath"
      Value="&quot;[%WINDIR]\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoLogo -NonInteractive -InputFormat None -NoProfile -ExecutionPolicy Bypass -Command &quot;[\[]System.Text.RegularExpressions.Regex[\]]::Replace([\[]Microsoft.Win32.Registry[\]]::LocalMachine.OpenSubKey(&apos;SYSTEM\CurrentControlSet\Control\Session Manager\Environment\&apos;).GetValue(&apos;PATH&apos;, &apos;&apos;, [\[]Microsoft.Win32.RegistryValueOptions[\]]::DoNotExpandEnvironmentNames).ToString(),  [\[]System.Text.RegularExpressions.Regex[\]]::Escape(&apos;[ProgramFiles64Folder]<%= settings[:pl_company_name] %>\Puppet\bin&apos;) + &apos;([\?]&gt;;)[\?]&apos;, &apos;&apos;, [\[]System.Text.RegularExpressions.RegexOptions[\]]::IgnoreCase) | %[\{][\[]System.Environment[\]]::SetEnvironmentVariable(&apos;PATH&apos;,$_, &apos;Machine&apos;)[\}]&quot;"
      Execute="immediate" />
    <CustomAction
      Id="Remove64BitPath"
      BinaryKey="WixCA"
      DllEntry="CAQuietExec64"
      Execute="deferred"
      Return="ignore" />
    <CustomAction
      Id="Remove64BitProgramFiles_SetProp"
      Property="Remove64BitProgramFiles"
      Value="&quot;[%WINDIR]\System32\cmd.exe&quot; /c IF EXIST &quot;[ProgramFiles64Folder]<%= settings[:pl_company_name] %>\&quot; rmdir /s /q &quot;[ProgramFiles64Folder]<%= settings[:pl_company_name] %>&quot;"
      Execute="immediate" />
    <CustomAction
      Id="Remove64BitProgramFiles"
      BinaryKey="WixCA"
      DllEntry="CAQuietExec64"
      Execute="deferred"
      Return="ignore" />
    <%-end-%>
  </Fragment>
</Wix>
