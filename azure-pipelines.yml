# Don't run Azure when a branch is updated, only when a PR is updated.
# Prevents double builds when a PR is made from the main repo and not a fork.
trigger: none
pr:
  autoCancel: true
  branches:
    include:
    - '*'

pool:
  # self-hosted agent on Windows 10 2004 / WSL2 environment
  # includes Ruby 2.5
  name: Default

variables:
  DOCKER_BUILDKIT: 1
  NAMESPACE: puppet
  CONTAINER_NAME: puppet-agent-ubuntu
  CONTAINER_BUILD_PATH: .
  CONTAINER_NAME2: puppet-agent-alpine
  LINT_IGNORES: DL3008 DL3018 DL4000 DL4001 DL3028
  BUILD_OPTIONS: --memory 3g

workspace:
  clean: resources

steps:
- checkout: self  # self represents the repo where the initial Pipelines YAML file was found
  clean: true  # whether to fetch clean each time

- powershell: |
    $gemfile = Join-Path -Path (Get-Location) -ChildPath 'docker/Gemfile'
    $gempath = Join-Path -Path (Get-Location) -ChildPath 'docker/.bundle/gems'
    bundle config --local gemfile $gemfile
    bundle config --local path $gempath
    bundle install --with test
  displayName: Fetch Dependencies
  timeoutInMinutes: 1
  name: fetch_deps

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Write-HostDiagnostics
  displayName: Diagnostic Host Information
  timeoutInMinutes: 2
  name: hostinfo

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Lint-Dockerfile -Name $ENV:CONTAINER_NAME2 -Ignore ($ENV:LINT_IGNORES -split ' ')
  displayName: Lint $(CONTAINER_NAME2) Dockerfile
  timeoutInMinutes: 1
  name: lint_alpine_dockerfile

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Lint-Dockerfile -Name $ENV:CONTAINER_NAME -Ignore ($ENV:LINT_IGNORES -split ' ')
  displayName: Lint $(CONTAINER_NAME) Dockerfile
  timeoutInMinutes: 1
  name: lint_dockerfile

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Build-Container -Name $ENV:CONTAINER_NAME -Namespace $ENV:NAMESPACE -AdditionalOptions ($ENV:BUILD_OPTIONS -split ' ')
  displayName: Build $(CONTAINER_NAME) Container
  timeoutInMinutes: 5
  name: build_container

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Build-Container -Name $ENV:CONTAINER_NAME2 -Namespace $ENV:NAMESPACE -PathOrUri $ENV:CONTAINER_BUILD_PATH -AdditionalOptions ($ENV:BUILD_OPTIONS -split ' ')
  displayName: Build $(CONTAINER_NAME2) Container
  timeoutInMinutes: 40
  name: build_alpine_container

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Initialize-TestEnv
  displayName: Prepare Test Environment
  name: test_prepare

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Invoke-ContainerTest -Name $ENV:CONTAINER_NAME -Namespace $ENV:NAMESPACE
  displayName: Test $(CONTAINER_NAME)
  timeoutInMinutes: 5
  name: test_container

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Invoke-ContainerTest -Name $ENV:CONTAINER_NAME2 -Namespace $ENV:NAMESPACE
  displayName: Test $(CONTAINER_NAME2)
  timeoutInMinutes: 5
  name: test_alpine_container

- task: PublishTestResults@2
  displayName: Publish $(CONTAINER_NAME) test results
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'docker/TEST-*.xml'
    testRunTitle: $(CONTAINER_NAME) Test Results

- task: PublishTestResults@2
  displayName: Publish $(CONTAINER_NAME2) test results
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'docker/TEST-*.xml'
    testRunTitle: $(CONTAINER_NAME2) Test Results

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    # builds alias puppet-agent to puppet-agent-ubuntu which requires forced removal
    Clear-BuildState -Name $ENV:CONTAINER_NAME -Namespace $ENV:NAMESPACE -Force
    Clear-BuildState -Name $ENV:CONTAINER_NAME2 -Namespace $ENV:NAMESPACE
  displayName: Container Cleanup
  timeoutInMinutes: 4
  condition: always()
