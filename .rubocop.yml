AllCops:
  Include:
    - 'bin/**/*.rb'
    - 'configs/**/*.rb'
  Exclude:
    - 'acceptance/**/*'
    - 'resources/**/*.rb'
    - 'ext/**/*'
    - 'vendor/**/*'
    - 'bundle/**/*'
    - 'gems/**/*'


# MAYBE useful - errors when rescue {} happens.
Lint/HandleExceptions:
  Enabled: false

# MAYBE useful - catches while 1
Lint/LiteralInCondition:
  Enabled: false

# DISABLED really useless. Detects return as last statement.
Style/RedundantReturn:
  Enabled: false

# DISABLED since the instances do not seem to indicate any specific errors.
Lint/AmbiguousOperator:
  Enabled: false

# DISABLED - not useful
Style/SpaceBeforeComment:
  Enabled: false

# DISABLED - not useful
Style/HashSyntax:
  Enabled: false

# USES: as shortcut for non nil&valid checking a = x() and a.empty?
# DISABLED - not useful
Style/AndOr:
  Enabled: false

# DISABLED - not useful
Style/RedundantSelf:
  Enabled: false

# DISABLED - not useful
Metrics/MethodLength:
  Enabled: false

# DISABLED - not useful
Style/WhileUntilModifier:
  Enabled: false

# DISABLED - the offender is just haskell envy
Lint/AmbiguousRegexpLiteral:
  Enabled: false

# DISABLED
Lint/Eval:
  Enabled: false
# DISABLED
Lint/BlockAlignment:
  Enabled: false

# DISABLED
Lint/DefEndAlignment:
  Enabled: false

# DISABLED
Lint/EndAlignment:
  Enabled: false

# DISABLED
Lint/DeprecatedClassMethods:
  Enabled: false

# DISABLED
Lint/Loop:
  Enabled: false

# DISABLED
Lint/ParenthesesAsGroupedExpression:
  Enabled: false

Lint/RescueException:
  Enabled: false

Lint/StringConversionInInterpolation:
  Enabled: false

Lint/UnusedBlockArgument:
  Enabled: false

Lint/UnusedMethodArgument:
  Enabled: false

# DISABLED - TODO
Lint/UselessAccessModifier:
  Enabled: false

# DISABLED - TODO
Lint/UselessAssignment:
  Enabled: false

# DISABLED - TODO
Lint/Void:
  Enabled: false

Style/AccessModifierIndentation:
  Enabled: false

Style/AccessorMethodName:
  Enabled: false

Style/Alias:
  Enabled: false

Style/AlignArray:
  Enabled: false

Style/AlignHash:
  Enabled: false

Style/AlignParameters:
  Enabled: false

Metrics/BlockNesting:
  Enabled: false

Style/AsciiComments:
  Enabled: false

Style/Attr:
  Enabled: false

Style/BlockDelimiters:
  Enabled: false

Style/BracesAroundHashParameters:
  Enabled: false

Style/CaseEquality:
  Enabled: false

Style/CaseIndentation:
  Enabled: false

Style/CharacterLiteral:
  Enabled: false

Style/ClassAndModuleCamelCase:
  Enabled: false

Style/ClassAndModuleChildren:
  Enabled: false

Style/ClassCheck:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Style/ClassMethods:
  Enabled: false

Style/ClassVars:
  Enabled: false

Style/WhenThen:
  Enabled: false


# DISABLED - not useful
Style/WordArray:
  Enabled: false

Style/UnneededPercentQ:
  Enabled: false

Style/Tab:
  Enabled: false

Style/TrailingBlankLines:
  Enabled: false

Style/LeadingCommentSpace:
  Enabled: false

Style/CollectionMethods:
  Enabled: false

Style/CommentIndentation:
  Enabled: false

Style/ColonMethodCall:
  Enabled: false

Style/CommentAnnotation:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Style/ConstantName:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/DefWithParentheses:
  Enabled: false

Style/DeprecatedHashMethods:
  Enabled: false

Style/DotPosition:
  Enabled: false

# DISABLED - used for converting to bool
Style/DoubleNegation:
  Enabled: false

Style/EachWithObject:
  Enabled: false

Style/EmptyLineBetweenDefs:
  Enabled: false

Style/IndentArray:
  Enabled: false

Style/IndentHash:
  Enabled: false

Style/EmptyLines:
  Enabled: false

Style/EmptyLinesAroundAccessModifier:
  Enabled: false

Style/EmptyLinesAroundBlockBody:
  Enabled: false

Style/EmptyLinesAroundClassBody:
  Enabled: false

Style/EmptyLinesAroundModuleBody:
  Enabled: false

Style/EmptyLinesAroundMethodBody:
  Enabled: false

Style/EmptyLiteral:
  Enabled: false

Metrics/LineLength:
  Enabled: false

Style/LineEndConcatenation:
  Enabled: false

Style/StringLiterals:
  Enabled: false

Style/TrailingComma:
  Enabled: false

Style/GlobalVars:
  Enabled: false

Style/GuardClause:
  Enabled: false

Style/IfUnlessModifier:
  Enabled: false

Style/Next:
  Enabled: false

Style/SingleLineBlockParams:
  Enabled: false

Style/SingleLineMethods:
  Enabled: false

Style/SpecialGlobalVars:
  Enabled: false

Style/TrivialAccessors:
  Enabled: false

# This pushes preference for shell commands as backticks instead of %x
Style/CommandLiteral:
  EnforcedStyle: mixed

Style/Lambda:
  Enabled: false

Style/MethodName:
  Enabled: false

Style/SignalException:
  Enabled: false

Style/PerlBackrefs:
  Enabled: false

Style/PredicateName:
  Enabled: false

Style/RegexpLiteral:
  Enabled: false

Style/ModuleFunction:
  Enabled: false

Lint/Debugger:
  Enabled: false
